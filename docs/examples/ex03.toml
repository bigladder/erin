############################################################
# Simulation Information
[simulation_info]
rate_unit = "kW"
quantity_unit = "kJ"
time_unit = "years"
max_time = 1000
############################################################
# Streams
[streams.electricity]
type = "electricity_medium_voltage"
############################################################
# Loads
[loads.building_electrical]
csv_file = "ex02.csv"
############################################################
# Components
[components.electric_utility]
type = "source"
output_stream = "electricity"
fragilities = ["highly_vulnerable_to_wind"]
[components.cluster_01_electric]
type = "load"
input_stream = "electricity"
loads_by_scenario.blue_sky = "building_electrical"
loads_by_scenario.class_4_hurricane = "building_electrical"
[components.emergency_generator]
type = "source"
output_stream = "electricity"
fragilities = ["somewhat_vulnerable_to_flooding"]
[components.bus]
type = "muxer"
stream = "electricity"
num_inflows = 2
num_outflows = 1
# An "in_order" dispatch strategy means that power requests are routed in order
# upstream through the input ports in the order they are specified. That is,
# "inflow_grid" would be asked to provide power first. If there is any lack of
# power, "inflow_genset" would be asked to make up the difference. Note: on
# the output side, if more than one output, outputs are handled differently in
# that power shortages are always spread evenly across all outputs. Explicit
# switches or changes in load requests are used to drop loads (or simulate
# their dropping).
dispatch_strategy = "in_order"
############################################################
# Fragility Curves
[fragility.somewhat_vulnerable_to_flooding]
vulnerable_to = "inundation_depth_ft"
type = "linear"
lower_bound = 6.0
upper_bound = 14.0
[fragility.highly_vulnerable_to_wind]
vulnerable_to = "wind_speed_mph"
type = "linear"
lower_bound = 80.0
upper_bound = 160.0
############################################################
# Networks
[networks.normal_operations]
# array of 2, 4, or 6 element tuples each array holds a connection.
# 2-tuple:
# ["A","B"] is short-hand for: ["A","outflow",0,"B","inflow",0] where "A" is
# the id for the first component and "B" is the id for the second component.
# "Outflow" indicates the port type (inflow or outflow). Inflow and Outflow are
# determined per the "normal flow direction". The "0" values indicate the port
# number for the case of components with multiple ports; port numbering starts
# at 0. Thus, this connects the first "outflow" port of "A" to the first
# "inflow" port of "B".
# 4-tuple:
# ["A", "outflow", "B", "inflow"] maps to:
# ["A", "outflow", 0, "B", "inflow", 0]
# 6-tuple: (full specification)
# ["A", "outflow", 1, "B", "inflow", 0] would indicate that A's second outflow
# port (ports are numbered from 0) is connected to B's first inflow port.
connections = [["electric_utility", "cluster_01_electric"]]
[networks.emergency_operations]
connections = [
  ["electric_utility", "outflow", 0, "bus", "inflow_grid"],
  ["emergency_generator", "outflow", 0, "bus", "inflow_genset"],
  ["bus", "cluster_01_electric"]]
############################################################
# Scenarios
[scenarios.blue_sky]
time_units = "hours"
occurrence_distribution = {type = "fixed", value = 0}
duration = 8760
max_occurrences = 1
network = "normal_operations"
[scenarios.class_4_hurricane]
time_units = "hours"
occurrence_distribution = {type = "fixed", value = 87600}
duration = 336
max_occurrences = -1
network = "emergency_operations"
intensity.wind_speed_mph = 156
intensity.inundation_depth_ft = 8
