<%#INITIALIZE
# General
parameter "simulation_duration_in_years", :default=>100
parameter "random_setting", :default=>"Auto" # "Auto" | "Seed"
parameter "random_seed", :default=>17
# Load Profile
parameter "load_profile_scenario_id", :default=>["blue_sky", "class_4_hurricane"]
parameter "load_profile_building_id", :default=>["mc", "mc", "other", "other"]
parameter "load_profile_enduse", :default=>["electrical", "electrical", "electrical", "electrical"]
parameter "load_profile_file", :default=>["mc_blue_sky_electrical.csv", "mc_class_4_hurricane_electrical.csv", "other_blue_sky_electrical.csv", "other_class_4_hurricane_electrical.csv"]
# Scenario
parameter "scenario_id", :default=>["blue_sky", "class_4_hurricane"]
parameter "scenario_duration_in_hours", :default=>[8760, 336]
parameter "scenario_max_occurrence", :default=>[1, -1]
parameter "scenario_fixed_frequency_in_years", :default=>[0, 30]
# Building-to-Cluster Connectivity
# Cluster-to-Community Connectivity
# Community-to-Utility Connectivity
# Building Level Configuration
parameter "building_level_building_id", :default=>["mc", "other"]
parameter "building_level_egen_flag", :default=>["FALSE", "FALSE"]
parameter "building_level_egen_eff_pct", :default=>[38.0, 38.0]
#parameter "building_level_egen_peak_pwr_kW", :default=>[100.0, 100.0] # Not currently supported in the engine
parameter "building_level_heat_storage_flag", :default=>["FALSE", "FALSE"]
parameter "building_level_heat_storage_cap_kWh", :default=>[0.0, 0.0]
parameter "building_level_gas_boiler_flag", :default=>["FALSE", "FALSE"]
parameter "building_level_gas_boiler_eff_pct", :default=>[42.0, 42.0]
#parameter "building_level_gas_boiler_peak_heat_gen_kW", :default=>[25.0, 25.0] # Not currently supported in the engine
parameter "building_level_echiller_flag", :default=>["FALSE", "FALSE"]
parameter "building_level_echiller_peak_cooling_kW", :default=>[50.0, 50.0]
parameter "building_level_echiller_eff_pct", :default=>[540.0, 540.0]
# Cluster Level Configuration
# Community Level Configuration
%>
<% require 'set' %>
<%  def is_true(x) %>
<%    (x == true) || (x.to_s.downcase.strip == "true") %>
<%  end %>
<%  def equals(x, y) %>
<%    (x.to_s.downcase.strip == y.to_s.downcase.strip) %>
<%  end %>
<%  enduse_set = Set.new %>
<%  fuels_set = Set.new %>
<%  load_id_set = Set.new %>
<%  load_ids = [] %>
<%  num_buildings = building_level_building_id.length %>
[simulation_info]
rate_unit = "kW"
quantity_unit = "kJ"
time_unit = "years"
<% if equals(random_setting, "seed") %>
random_seed = <%= random_seed.to_i %>
<% end %>
max_time = <%= simulation_duration_in_years %>
############################################################
<% load_profile_building_id.each_with_index do |building_id, idx| %>
<% s_id = load_profile_scenario_id[idx] %>
<% enduse = load_profile_enduse[idx] %>
<% enduse_set << enduse %>
<% file = load_profile_file[idx] %>
<% load_id = "#{building_id}_#{enduse}_#{s_id}" %>
<% puts "WARNING! Duplicate load_id `#{load_id}`" if load_id_set.include?(load_id) %>
<% load_id_set << load_id %>
<% load_ids << load_id %>
[loads.<%= load_id %>]
csv_file = "<%= file %>"
<% end %>
############################################################
[components.electric_source]
type = "source"
outflow = "electricity"
<% if num_buildings > 1 %>
[components.building_level_electric_bus]
type = "muxer"
stream = "electricity"
num_inflows = 1
num_outflows = <%= num_buildings %>
<% end %>
<% b_id_enduses = Set.new %>
<% load_profile_building_id.each_with_index do |b_id, idx| %>
<% enduse = load_profile_enduse[idx] %>
<% tag = "#{b_id}_#{enduse}" %>
<% next if b_id_enduses.include?(tag) %>
<% b_id_enduses << tag %>
[components.<%= b_id %>_<%= enduse %>]
type = "load"
inflow = "<%= enduse %>"
<% load_profile_scenario_id.each_with_index do |s_id, idx2| %>
<% if ((load_profile_building_id[idx2] == b_id) && (load_profile_enduse[idx2] == enduse)) %>
<% load_id = load_ids[idx2] %>
loads_by_scenario.<%= s_id %> = "<%= load_id %>"
<% end %>
<% end %>
<% end %>
<% building_level_building_id.sort.each_with_index do |b_id, idx| %>
<% if is_true(building_level_egen_flag[idx]) %>
[component.<%= b_id %>_emergency_generator]
type = "converter"
inflow = "natural_gas"
outflow = "electricity"
lossflow = "waste_heat"
constant_efficiency = <%= building_level_egen_eff_pct[idx].to_f / 100.0 %>
<% end # if %>
<% if is_true(building_level_heat_storage_flag[idx]) %>
[component.<%= b_id %>_heat_storage]
type = "store"
outflow = "heating"
inflow = "heating"
capacity_unit = "kWh"
capacity = <%= building_level_heat_storage_cap_kWh[idx].to_f %>
max_inflow = <%= building_level_heat_storage_cap_kWh[idx].to_f / 10.0 %>
<% end # if %>
<% if is_true(building_level_gas_boiler_flag[idx]) %>
[component.<%= b_id %>_gas_boiler]
type = "converter"
outflow = "heating"
inflow = "natural_gas"
lossflow = "waste_heat"
constant_efficiency = <%= building_level_gas_boiler_eff_pct[idx].to_f %>
<% end # if %>
<% end # building_level_building_id.sort.each_with_index %>
############################################################
[networks.nw]
connections = [
  ["electric_source:OUT(0)", "building_level_electric_bus:IN(0)", "electricity"],
<% num_buildings.times do |n| %>
  ["building_level_electric_bus:OUT(<%= n %>)", "<%= building_level_building_id[n] %>_electricity_load:IN(0)", "electricity"],
<% end %>
  ]
############################################################
<% scenario_id.each_with_index do |s_id, idx| %>
[scenarios.<%= s_id %>]
time_unit = "hours"
occurrence_distribution = {type = "fixed", value = <%= (scenario_fixed_frequency_in_years[idx] * 8760).to_i %>, time_unit="hours"}
duration = <%= scenario_duration_in_hours[idx] %>
max_occurrences = <%= scenario_max_occurrence[idx].to_i %>
network = "nw"
<% end %>
